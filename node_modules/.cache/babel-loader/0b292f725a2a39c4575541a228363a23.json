{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Navbar from './Navbar';\nimport './App.css';\nimport LoveCoin from \"../abis/LoveCoin.json\";\nimport Main from \"./Main.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.join = (sex, handle) => {\n      this.state.loading = true;\n      console.log(\"Is called\");\n      this.state.loveCoin.methods.join(sex, handle).send({\n        from: this.state.account\n      });\n      this.state.loading = false;\n    };\n\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: {},\n      user: {},\n      loading: false\n    };\n  }\n\n  async connectBlockchain() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const netId = await web3.eth.net.getId(); //Load LoveCoin Contract\n\n    const loveCoinData = LoveCoin.networks[netId];\n\n    if (loveCoinData) {\n      const loveCoin = new web3.eth.Contract(LoveCoin.abi, loveCoinData.address);\n      this.setState({\n        loveCoin\n      });\n      let user = await loveCoin.methods.users(this.state.account).call();\n      this.setState({\n        user: user\n      });\n      let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n      this.setState({\n        loveCoinBalance: loveCoinBalance.toString()\n      });\n    } else {\n      window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      weindow.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n    }\n  } //Join As new user function\n\n\n  render() {\n    let content;\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading... Please be Patient with me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this);\n    } else {\n      content = /*#__PURE__*/_jsxDEV(Main, {\n        connectBlockchain: this.connectBlockchain()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        account: this.state.account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js"],"names":["React","Component","Web3","Navbar","LoveCoin","Main","App","constructor","props","join","sex","handle","state","loading","console","log","loveCoin","methods","send","from","account","loveCoinBalance","user","connectBlockchain","loadWeb3","loadBlockchainData","web3","window","accounts","eth","getAccounts","setState","netId","net","getId","loveCoinData","networks","Contract","abi","address","users","call","balanceOf","toString","alert","ethereum","enable","weindow","currentProvider","render","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport Navbar from './Navbar'\nimport './App.css'\nimport LoveCoin from \"../abis/LoveCoin.json\"\nimport Main from \"./Main.js\"\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: {},\n      user: {},\n      loading: false\n    }\n  }\n\n  async connectBlockchain(){\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData(){\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({account:accounts[0]});\n\n    const netId = await web3.eth.net.getId();\n        //Load LoveCoin Contract\n        const loveCoinData = LoveCoin.networks[netId]\n        if(loveCoinData){\n          const loveCoin = new web3.eth.Contract(LoveCoin.abi,loveCoinData.address);\n          this.setState({loveCoin});\n          let user = await loveCoin.methods.users(this.state.account).call();\n          this.setState({user:user});\n          let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n          this.setState({loveCoinBalance: loveCoinBalance.toString()});\n        }else{\n          window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n        }\n\n    this.setState({loading:false});\n    \n  }\n\n  async loadWeb3(){\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3){\n      weindow.web3 = new Web3(window.web3.currentProvider)\n    }\n    else{\n      window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n    }\n  }\n\n  //Join As new user function\n  join = (sex,handle)=>{\n    this.state.loading = true;\n    console.log(\"Is called\");\n    this.state.loveCoin.methods.join(sex,handle).send({from:this.state.account});\n    this.state.loading = false;\n  }\n\n  render() {\n    let content;\n    if(this.state.loading){\n      content = <h1>Loading... Please be Patient with me</h1>\n    }else{\n      content = <Main\n      connectBlockchain ={this.connectBlockchain()}\n      />\n    }\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}