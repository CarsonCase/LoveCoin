{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Navbar from './Navbar';\nimport './App.css';\nimport LoveCoin from \"../abis/LoveCoin.json\";\nimport Main from \"./Main.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connectBlockchain = async () => {\n      await this.loadWeb3();\n      await this.loadBlockchainData();\n    };\n\n    this.loadBlockchainData = async () => {\n      //this.setState({loading:true});\n      const web3 = window.web3;\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        account: accounts[0]\n      });\n      const netId = await web3.eth.net.getId(); //Load LoveCoin Contract\n\n      const loveCoinData = LoveCoin.networks[netId];\n\n      if (loveCoinData) {\n        const loveCoin = new web3.eth.Contract(LoveCoin.abi, loveCoinData.address);\n        this.setState({\n          loveCoin: loveCoin\n        });\n        let user = await loveCoin.methods.users(this.state.account).call();\n        this.setState({\n          user: user\n        });\n        let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n        loveCoinBalance = web3.utils.fromWei(loveCoinBalance, \"ether\");\n        this.setState({\n          loveCoinBalance: loveCoinBalance.toString()\n        });\n        let m = await loveCoin.methods.male_score_sum().call();\n        let f = await loveCoin.methods.female_score_sum().call();\n        let mc = await loveCoin.methods.maleUserCount().call();\n        let fc = await loveCoin.methods.femaleUserCount().call();\n        this.setState({\n          globals: {\n            female_scores: f.toString(),\n            male_scores: m.toString(),\n            female_count: Number(fc),\n            male_count: Number(mc)\n          }\n        });\n      } else {\n        window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.loadWeb3 = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        this.setState({\n          isConnected: true\n        });\n      } else if (window.web3) {\n        weindow.web3 = new Web3(window.web3.currentProvider);\n        this.setState({\n          isConnected: true\n        });\n      } else {\n        window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n      }\n    };\n\n    this.join = async (sex, handle) => {\n      await this.setState({\n        loading: true\n      });\n      await this.state.loveCoin.methods.join(sex, handle).send({\n        from: this.state.account\n      });\n      await this.loadBlockchainData();\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.getFeed = async () => {\n      if (this.state.isConnected) {\n        let feed = [];\n        let feedLength; //If user is male then itterate over all females \n        //In the future find ways to jumble this up so it's more random. Not important for small ammounts of users though\n\n        if (this.state.user.male) {\n          feedLength = await this.state.loveCoin.methods.femaleUserCount().call();\n\n          for (let i = 0; i < feedLength; i++) {\n            let addition = await this.state.loveCoin.methods.maleUsers(0).call();\n            feed.push(addition);\n          }\n        } //If user is female then itterate over all her likes\n        else if (this.state.user.male === false) {\n            feedLength = await this.state.loveCoin.methods.numberOfLikes(this.state.account).call();\n\n            for (var i = 0; i < feedLength; i++) {\n              let addition = await this.state.loveCoin.methods.have_liked(this.state.account, i);\n              feed.push(addition);\n            }\n          }\n\n        console.log(feed);\n      }\n    };\n\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: '0',\n      user: {},\n      loading: false,\n      isConnected: false,\n      globals: {\n        female_scores: '0',\n        male_scores: '0',\n        female_count: 0,\n        male_count: 0\n      },\n      feed: []\n    };\n  }\n\n  render() {\n    this.getFeed();\n\n    if (this.state.loading) {\n      return content = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading... Please be Patient with me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          account: this.state.account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          connected: this.state.isConnected,\n          connectBlockchain: this.connectBlockchain,\n          join: this.join,\n          account: this.state.account,\n          balance: this.state.loveCoinBalance,\n          user: this.state.user,\n          globals: this.state.globals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js"],"names":["React","Component","Web3","Navbar","LoveCoin","Main","App","constructor","props","connectBlockchain","loadWeb3","loadBlockchainData","web3","window","accounts","eth","getAccounts","setState","account","netId","net","getId","loveCoinData","networks","loveCoin","Contract","abi","address","user","methods","users","state","call","loveCoinBalance","balanceOf","utils","fromWei","toString","m","male_score_sum","f","female_score_sum","mc","maleUserCount","fc","femaleUserCount","globals","female_scores","male_scores","female_count","Number","male_count","alert","loading","ethereum","enable","isConnected","weindow","currentProvider","join","sex","handle","send","from","getFeed","feed","feedLength","male","i","addition","maleUsers","push","numberOfLikes","have_liked","console","log","render","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport Navbar from './Navbar'\nimport './App.css'\nimport LoveCoin from \"../abis/LoveCoin.json\"\nimport Main from \"./Main.js\"\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: '0',\n      user: {},\n      loading: false,\n      isConnected: false,\n      globals: {\n        female_scores: '0',\n        male_scores: '0',\n        female_count: 0,\n        male_count: 0\n      },\n      feed:[]\n    }\n  }\n\n  connectBlockchain = async()=>{\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  loadBlockchainData = async()=>{\n    //this.setState({loading:true});\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({account:accounts[0]});\n    const netId = await web3.eth.net.getId();\n        //Load LoveCoin Contract\n        const loveCoinData = LoveCoin.networks[netId]\n        if(loveCoinData){\n          const loveCoin = new web3.eth.Contract(LoveCoin.abi,loveCoinData.address);\n          this.setState({loveCoin:loveCoin});\n          let user = await loveCoin.methods.users(this.state.account).call();\n          this.setState({user:user});\n          let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n          loveCoinBalance = web3.utils.fromWei(loveCoinBalance,\"ether\");\n          this.setState({loveCoinBalance: loveCoinBalance.toString()});\n\n          let m = await loveCoin.methods.male_score_sum().call();\n          let f = await loveCoin.methods.female_score_sum().call();\n          let mc = await loveCoin.methods.maleUserCount().call();\n          let fc = await loveCoin.methods.femaleUserCount().call();\n          this.setState({\n            globals:{\n              female_scores: f.toString(),\n              male_scores: m.toString(),\n              female_count: Number(fc),\n              male_count: Number(mc)\n            }\n          });\n      \n        }else{\n          window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n        }\n\n    this.setState({loading:false});\n    \n  }\n\n  loadWeb3 = async()=>{\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      this.setState({isConnected:true});\n    }\n    else if (window.web3){\n      weindow.web3 = new Web3(window.web3.currentProvider);\n      this.setState({isConnected:true});\n    }\n    else{\n      window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n    }\n  }\n\n  //Join As new user function\n  join = async(sex,handle)=>{\n    await this.setState({loading:true});\n    await this.state.loveCoin.methods.join(sex,handle).send({from:this.state.account});\n    await this.loadBlockchainData();\n    this.setState({loading:false});\n  }\n\n  getFeed = async()=>{\n    if(this.state.isConnected){\n      let feed=[];\n      let feedLength;\n      //If user is male then itterate over all females \n      //In the future find ways to jumble this up so it's more random. Not important for small ammounts of users though\n      if(this.state.user.male){\n        feedLength = await this.state.loveCoin.methods.femaleUserCount().call();\n        for(let i=0; i < feedLength; i++){\n          let addition = await this.state.loveCoin.methods.maleUsers(0).call();\n          feed.push(addition);\n        }\n\n      }\n      //If user is female then itterate over all her likes\n      else if(this.state.user.male ===false){\n        feedLength = await this.state.loveCoin.methods.numberOfLikes(this.state.account).call();\n        for(var i=0; i<feedLength; i++){\n          let addition = await this.state.loveCoin.methods.have_liked(this.state.account,i);\n          feed.push(addition);\n        }\n      }\n      console.log(feed);\n    }\n  }\n\n  render() {\n    this.getFeed();\n    if(this.state.loading){\n      return(\n      content = <h1>Loading... Please be Patient with me</h1>\n      );\n    }else{\n      return (\n        <div>\n          <Navbar account={this.state.account} />\n          <Main\n            connected = {this.state.isConnected}\n            connectBlockchain ={this.connectBlockchain}\n            join = {this.join}\n            account = {this.state.account}\n            balance = {this.state.loveCoinBalance}\n            user = {this.state.user}\n            globals = {this.state.globals}\n            />\n        </div>\n      );\n  \n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}