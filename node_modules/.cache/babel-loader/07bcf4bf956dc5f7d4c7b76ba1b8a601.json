{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Navbar from './Navbar';\nimport './App.css';\nimport LoveCoin from \"../abis/LoveCoin.json\";\nimport Main from \"./Main.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connectBlockchain = async () => {\n      await this.loadWeb3();\n      await this.loadBlockchainData();\n    };\n\n    this.loadBlockchainData = async () => {\n      //this.setState({loading:true});\n      const web3 = window.web3;\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        account: accounts[0]\n      });\n      const netId = await web3.eth.net.getId(); //Load LoveCoin Contract\n\n      const loveCoinData = LoveCoin.networks[netId];\n\n      if (loveCoinData) {\n        const loveCoin = new web3.eth.Contract(LoveCoin.abi, loveCoinData.address);\n        console.log(loveCoin);\n        this.setState({\n          loveCoin: loveCoin\n        });\n        let user = await loveCoin.methods.users(this.state.account).call();\n        this.setState({\n          user: user\n        });\n        let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n        loveCoinBalance = web3.utils.fromWei(loveCoinBalance, \"ether\");\n        this.setState({\n          loveCoinBalance: loveCoinBalance.toString()\n        });\n        let m = await loveCoin.methods.male_score_sum().call();\n        let f = await loveCoin.methods.female_score_sum().call();\n        this.setState({\n          globals: {\n            female_scores: f.toString(),\n            male_scores: m.toString()\n          }\n        });\n      } else {\n        window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.loadWeb3 = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        this.setState({\n          isConnected: true\n        });\n      } else if (window.web3) {\n        weindow.web3 = new Web3(window.web3.currentProvider);\n        this.setState({\n          isConnected: true\n        });\n      } else {\n        window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n      }\n    };\n\n    this.join = (sex, handle) => {\n      this.state.loading = true;\n      console.log(\"Is called\");\n      this.state.loveCoin.methods.join(sex, handle).send({\n        from: this.state.account\n      });\n      this.state.loading = false;\n    };\n\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: '0',\n      user: {},\n      loading: false,\n      isConnected: false,\n      globals: {\n        female_scores: '0',\n        male_scores: '0'\n      }\n    };\n  }\n\n  getFeed() {\n    console.log(this.state.loveCoin);\n  }\n\n  render() {\n    this.getFeed();\n\n    if (this.state.loading) {\n      return content = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading... Please be Patient with me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          account: this.state.account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          connected: this.state.isConnected,\n          connectBlockchain: this.connectBlockchain,\n          join: this.join,\n          account: this.state.account,\n          balance: this.state.loveCoinBalance,\n          user: this.state.user,\n          globals: this.state.globals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js"],"names":["React","Component","Web3","Navbar","LoveCoin","Main","App","constructor","props","connectBlockchain","loadWeb3","loadBlockchainData","web3","window","accounts","eth","getAccounts","setState","account","netId","net","getId","loveCoinData","networks","loveCoin","Contract","abi","address","console","log","user","methods","users","state","call","loveCoinBalance","balanceOf","utils","fromWei","toString","m","male_score_sum","f","female_score_sum","globals","female_scores","male_scores","alert","loading","ethereum","enable","isConnected","weindow","currentProvider","join","sex","handle","send","from","getFeed","render","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport Navbar from './Navbar'\nimport './App.css'\nimport LoveCoin from \"../abis/LoveCoin.json\"\nimport Main from \"./Main.js\"\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: '0',\n      user: {},\n      loading: false,\n      isConnected: false,\n      globals: {\n        female_scores: '0',\n        male_scores: '0'\n      }\n    }\n  }\n\n  connectBlockchain = async()=>{\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  loadBlockchainData = async()=>{\n    //this.setState({loading:true});\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({account:accounts[0]});\n    const netId = await web3.eth.net.getId();\n        //Load LoveCoin Contract\n        const loveCoinData = LoveCoin.networks[netId]\n        if(loveCoinData){\n          const loveCoin = new web3.eth.Contract(LoveCoin.abi,loveCoinData.address);\n          console.log(loveCoin);\n          this.setState({loveCoin:loveCoin});\n          let user = await loveCoin.methods.users(this.state.account).call();\n          this.setState({user:user});\n          let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n          loveCoinBalance = web3.utils.fromWei(loveCoinBalance,\"ether\");\n          this.setState({loveCoinBalance: loveCoinBalance.toString()});\n\n          let m = await loveCoin.methods.male_score_sum().call();\n          let f = await loveCoin.methods.female_score_sum().call();\n          this.setState({\n            globals:{\n              female_scores: f.toString(),\n              male_scores: m.toString()\n            }\n          });\n      \n        }else{\n          window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n        }\n\n    this.setState({loading:false});\n    \n  }\n\n  loadWeb3 = async()=>{\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      this.setState({isConnected:true});\n    }\n    else if (window.web3){\n      weindow.web3 = new Web3(window.web3.currentProvider);\n      this.setState({isConnected:true});\n    }\n    else{\n      window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n    }\n  }\n\n  //Join As new user function\n  join = (sex,handle)=>{\n    this.state.loading = true;\n    console.log(\"Is called\");\n    this.state.loveCoin.methods.join(sex,handle).send({from:this.state.account});\n    this.state.loading = false;\n  }\n\n  getFeed(){\n    console.log(this.state.loveCoin);\n  }\n\n  render() {\n    this.getFeed();\n    if(this.state.loading){\n      return(\n      content = <h1>Loading... Please be Patient with me</h1>\n      );\n    }else{\n      return (\n        <div>\n          <Navbar account={this.state.account} />\n          <Main\n            connected = {this.state.isConnected}\n            connectBlockchain ={this.connectBlockchain}\n            join = {this.join}\n            account = {this.state.account}\n            balance = {this.state.loveCoinBalance}\n            user = {this.state.user}\n            globals = {this.state.globals}\n            />\n        </div>\n      );\n  \n    }\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}