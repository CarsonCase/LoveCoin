{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Navbar from './Navbar';\nimport './App.css';\nimport LoveCoin from \"../abis/LoveCoin.json\";\nimport Main from \"./Main.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.connectBlockchain = async () => {\n      //await this.loadWeb3();\n      //await this.loadBlockchainData();\n      console.log(\"test\");\n    };\n\n    this.loadBlockchainData = async () => {\n      const web3 = window.web3;\n      const accounts = await web3.eth.getAccounts();\n      this.setState({\n        account: accounts[0]\n      });\n      const netId = await web3.eth.net.getId(); //Load LoveCoin Contract\n\n      const loveCoinData = LoveCoin.networks[netId];\n\n      if (loveCoinData) {\n        const loveCoin = new web3.eth.Contract(LoveCoin.abi, loveCoinData.address);\n        this.setState({\n          loveCoin\n        });\n        let user = await loveCoin.methods.users(this.state.account).call();\n        this.setState({\n          user: user\n        });\n        let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n        this.setState({\n          loveCoinBalance: loveCoinBalance.toString()\n        });\n      } else {\n        window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.loadWeb3 = async () => {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n      } else if (window.web3) {\n        weindow.web3 = new Web3(window.web3.currentProvider);\n      } else {\n        window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n      }\n    };\n\n    this.join = (sex, handle) => {\n      this.state.loading = true;\n      console.log(\"Is called\");\n      this.state.loveCoin.methods.join(sex, handle).send({\n        from: this.state.account\n      });\n      this.state.loading = false;\n    };\n\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: {},\n      user: {},\n      loading: false\n    };\n  }\n\n  render() {\n    let content;\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading... Please be Patient with me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    } else {\n      content = /*#__PURE__*/_jsxDEV(Main, {\n        connectBlockchain: this.connectBlockchain\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        account: this.state.account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js"],"names":["React","Component","Web3","Navbar","LoveCoin","Main","App","constructor","props","connectBlockchain","console","log","loadBlockchainData","web3","window","accounts","eth","getAccounts","setState","account","netId","net","getId","loveCoinData","networks","loveCoin","Contract","abi","address","user","methods","users","state","call","loveCoinBalance","balanceOf","toString","alert","loading","loadWeb3","ethereum","enable","weindow","currentProvider","join","sex","handle","send","from","render","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport Navbar from './Navbar'\nimport './App.css'\nimport LoveCoin from \"../abis/LoveCoin.json\"\nimport Main from \"./Main.js\"\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: {},\n      user: {},\n      loading: false\n    }\n  }\n\n  connectBlockchain = async()=>{\n    //await this.loadWeb3();\n    //await this.loadBlockchainData();\n    console.log(\"test\");\n  }\n\n  loadBlockchainData = async()=>{\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({account:accounts[0]});\n\n    const netId = await web3.eth.net.getId();\n        //Load LoveCoin Contract\n        const loveCoinData = LoveCoin.networks[netId]\n        if(loveCoinData){\n          const loveCoin = new web3.eth.Contract(LoveCoin.abi,loveCoinData.address);\n          this.setState({loveCoin});\n          let user = await loveCoin.methods.users(this.state.account).call();\n          this.setState({user:user});\n          let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n          this.setState({loveCoinBalance: loveCoinBalance.toString()});\n        }else{\n          window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n        }\n\n    this.setState({loading:false});\n    \n  }\n\n  loadWeb3 = async()=>{\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3){\n      weindow.web3 = new Web3(window.web3.currentProvider)\n    }\n    else{\n      window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n    }\n  }\n\n  //Join As new user function\n  join = (sex,handle)=>{\n    this.state.loading = true;\n    console.log(\"Is called\");\n    this.state.loveCoin.methods.join(sex,handle).send({from:this.state.account});\n    this.state.loading = false;\n  }\n\n  render() {\n    let content;\n    if(this.state.loading){\n      content = <h1>Loading... Please be Patient with me</h1>\n    }else{\n      content = <Main\n      connectBlockchain ={this.connectBlockchain}\n      />\n    }\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        {content}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}