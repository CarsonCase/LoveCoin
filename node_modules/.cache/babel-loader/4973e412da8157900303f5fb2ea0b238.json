{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Navbar from './Navbar';\nimport './App.css';\nimport LoveCoin from \"../abis/LoveCoin.json\";\nimport Main from \"./Main.js\";\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const netId = await web3.eth.net.getId(); //Load LoveCoin Contract\n\n    const loveCoinData = LoveCoin.networks[netId];\n\n    if (loveCoinData) {\n      const loveCoin = new web3.eth.Contract(LoveCoin.abi, loveCoinData.address);\n      this.setState({\n        loveCoin\n      });\n      let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n      let user = await loveCoin.methods.users(this.state.account).call();\n      this.setState({\n        loveScore: user.score\n      });\n      this.setState({\n        loveCoinBalance: loveCoinBalance.toString()\n      });\n    } else {\n      window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      weindow.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: {},\n      loveScore: {},\n      loading: true\n    };\n  }\n\n  render() {\n    let content;\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading... Please be Patient with me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this);\n    } else {\n      content = /*#__PURE__*/_jsxDEV(Main, {\n        loveCoinBalance: this.state.loveCoinBalance,\n        loveScore: this.state.loveScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        account: this.state.account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"main\", {\n            role: \"main\",\n            className: \"col-lg-12 ml-auto mr-auto\",\n            style: {\n              maxWidth: '600px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content mr-auto ml-auto\",\n              children: content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/carson/Documents/programming/blockchain/loveCoin/src/components/App.js"],"names":["React","Component","Web3","Navbar","LoveCoin","Main","App","componentWillMount","loadWeb3","loadBlockchainData","web3","window","accounts","eth","getAccounts","setState","account","netId","net","getId","loveCoinData","networks","loveCoin","Contract","abi","address","loveCoinBalance","methods","balanceOf","state","call","user","users","loveScore","score","toString","alert","loading","ethereum","enable","weindow","currentProvider","constructor","props","render","content","maxWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAE5B,QAAMM,kBAAN,GAA0B;AACxB,UAAM,KAAKC,QAAL,EAAN;AACA,UAAM,KAAKC,kBAAL,EAAN;AACD;;AAEC,QAAMA,kBAAN,GAA0B;AACxB,UAAMC,IAAI,GAAGC,MAAM,CAACD,IAApB;AACA,UAAME,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAvB;AACA,SAAKC,QAAL,CAAc;AAACC,MAAAA,OAAO,EAACJ,QAAQ,CAAC,CAAD;AAAjB,KAAd;AAEA,UAAMK,KAAK,GAAG,MAAMP,IAAI,CAACG,GAAL,CAASK,GAAT,CAAaC,KAAb,EAApB,CALwB,CAMpB;;AACA,UAAMC,YAAY,GAAGhB,QAAQ,CAACiB,QAAT,CAAkBJ,KAAlB,CAArB;;AACA,QAAGG,YAAH,EAAgB;AACd,YAAME,QAAQ,GAAG,IAAIZ,IAAI,CAACG,GAAL,CAASU,QAAb,CAAsBnB,QAAQ,CAACoB,GAA/B,EAAmCJ,YAAY,CAACK,OAAhD,CAAjB;AACA,WAAKV,QAAL,CAAc;AAACO,QAAAA;AAAD,OAAd;AACA,UAAII,eAAe,GAAG,MAAMJ,QAAQ,CAACK,OAAT,CAAiBC,SAAjB,CAA2B,KAAKC,KAAL,CAAWb,OAAtC,EAA+Cc,IAA/C,EAA5B;AACA,UAAIC,IAAI,GAAG,MAAMT,QAAQ,CAACK,OAAT,CAAiBK,KAAjB,CAAuB,KAAKH,KAAL,CAAWb,OAAlC,EAA2Cc,IAA3C,EAAjB;AACA,WAAKf,QAAL,CAAc;AAACkB,QAAAA,SAAS,EAACF,IAAI,CAACG;AAAhB,OAAd;AACA,WAAKnB,QAAL,CAAc;AAACW,QAAAA,eAAe,EAAEA,eAAe,CAACS,QAAhB;AAAlB,OAAd;AACD,KAPD,MAOK;AACHxB,MAAAA,MAAM,CAACyB,KAAP,CAAa,qDAAb;AACD;;AAEL,SAAKrB,QAAL,CAAc;AAACsB,MAAAA,OAAO,EAAC;AAAT,KAAd;AAED;;AAED,QAAM7B,QAAN,GAAgB;AACd,QAAGG,MAAM,CAAC2B,QAAV,EAAmB;AACjB3B,MAAAA,MAAM,CAACD,IAAP,GAAc,IAAIR,IAAJ,CAASS,MAAM,CAAC2B,QAAhB,CAAd;AACA,YAAM3B,MAAM,CAAC2B,QAAP,CAAgBC,MAAhB,EAAN;AACD,KAHD,MAIK,IAAI5B,MAAM,CAACD,IAAX,EAAgB;AACnB8B,MAAAA,OAAO,CAAC9B,IAAR,GAAe,IAAIR,IAAJ,CAASS,MAAM,CAACD,IAAP,CAAY+B,eAArB,CAAf;AACD,KAFI,MAGD;AACF9B,MAAAA,MAAM,CAACyB,KAAP,CAAa,oEAAb;AACD;AACF;;AAGDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKd,KAAL,GAAa;AACXb,MAAAA,OAAO,EAAE,KADE;AAEXM,MAAAA,QAAQ,EAAE,EAFC;AAGXI,MAAAA,eAAe,EAAE,EAHN;AAIXO,MAAAA,SAAS,EAAE,EAJA;AAKXI,MAAAA,OAAO,EAAE;AALE,KAAb;AAOD;;AAEDO,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAJ;;AACA,QAAG,KAAKhB,KAAL,CAAWQ,OAAd,EAAsB;AACpBQ,MAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAV;AACD,KAFD,MAEK;AACHA,MAAAA,OAAO,gBAAG,QAAC,IAAD;AACR,QAAA,eAAe,EAAI,KAAKhB,KAAL,CAAWH,eADtB;AAER,QAAA,SAAS,EAAI,KAAKG,KAAL,CAAWI;AAFhB;AAAA;AAAA;AAAA;AAAA,cAAV;AAID;;AACD,wBACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWb;AAA5B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAM,YAAA,IAAI,EAAC,MAAX;AAAkB,YAAA,SAAS,EAAC,2BAA5B;AAAwD,YAAA,KAAK,EAAE;AAAE8B,cAAAA,QAAQ,EAAE;AAAZ,aAA/D;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,yBAAf;AAAA,wBAEGD;AAFH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AAjFyB;;AAoF5B,eAAevC,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport Navbar from './Navbar'\nimport './App.css'\nimport LoveCoin from \"../abis/LoveCoin.json\"\nimport Main from \"./Main.js\"\n\nclass App extends Component {\n\nasync componentWillMount(){\n  await this.loadWeb3();\n  await this.loadBlockchainData();\n}\n\n  async loadBlockchainData(){\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({account:accounts[0]});\n\n    const netId = await web3.eth.net.getId();\n        //Load LoveCoin Contract\n        const loveCoinData = LoveCoin.networks[netId]\n        if(loveCoinData){\n          const loveCoin = new web3.eth.Contract(LoveCoin.abi,loveCoinData.address);\n          this.setState({loveCoin});\n          let loveCoinBalance = await loveCoin.methods.balanceOf(this.state.account).call();\n          let user = await loveCoin.methods.users(this.state.account).call();\n          this.setState({loveScore:user.score});\n          this.setState({loveCoinBalance: loveCoinBalance.toString()});\n        }else{\n          window.alert(\"LoveCoin Contract not yet deployed to blockchain :(\");\n        }\n\n    this.setState({loading:false});\n    \n  }\n\n  async loadWeb3(){\n    if(window.ethereum){\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3){\n      weindow.web3 = new Web3(window.web3.currentProvider)\n    }\n    else{\n      window.alert(\"Non-Ethereum browser detected. You should consider using MetaMask!\");\n    }\n  }\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '0x0',\n      loveCoin: {},\n      loveCoinBalance: {},\n      loveScore: {},\n      loading: true\n    }\n  }\n\n  render() {\n    let content;\n    if(this.state.loading){\n      content = <h1>Loading... Please be Patient with me</h1>\n    }else{\n      content = <Main\n        loveCoinBalance = {this.state.loveCoinBalance}\n        loveScore = {this.state.loveScore}\n      />\n    }\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\n              <div className=\"content mr-auto ml-auto\">\n\n                {content}\n\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}